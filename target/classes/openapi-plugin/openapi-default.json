{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate an existing user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out the current user",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Logged out"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Retrieve the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new account",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Duplicate username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List all products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Collection of persisted products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        },
        "required": [
          "id"
        ]
      },
      "ProductCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string"
          }
        }
      },
      "ProductUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Optional"
          },
          "price": {
            "$ref": "#/components/schemas/Optional"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserRegistrationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "createdAt": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        },
        "required": [
          "id"
        ]
      },
      "Role": {
        "type": "string",
        "enum": [
          "PUBLIC",
          "USER",
          "ADMIN"
        ]
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      },
      "Duration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "": {
            "type": "integer",
            "format": "int64"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporalUnit"
            }
          },
          "positive": {
            "type": "boolean"
          },
          "zero": {
            "type": "boolean"
          },
          "negative": {
            "type": "boolean"
          },
          "seconds": {
            "type": "integer",
            "format": "int64"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "",
          "positive",
          "zero",
          "negative",
          "seconds",
          "nano"
        ]
      },
      "LocalTime": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supported": {
            "type": "boolean"
          },
          "": {
            "type": "integer",
            "format": "int32"
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "0": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "after": {
            "type": "boolean"
          },
          "before": {
            "type": "boolean"
          }
        },
        "required": [
          "supported",
          "supported",
          "",
          "long",
          "0",
          "hour",
          "minute",
          "second",
          "nano",
          "after",
          "before"
        ]
      },
      "Month": {
        "type": "string",
        "enum": [
          "JANUARY",
          "FEBRUARY",
          "MARCH",
          "APRIL",
          "MAY",
          "JUNE",
          "JULY",
          "AUGUST",
          "SEPTEMBER",
          "OCTOBER",
          "NOVEMBER",
          "DECEMBER"
        ]
      },
      "OffsetDateTime": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supported": {
            "type": "boolean"
          },
          "": {
            "type": "integer",
            "format": "int32"
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "$ref": "#/components/schemas/Month"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "after": {
            "type": "boolean"
          },
          "before": {
            "type": "boolean"
          },
          "equal": {
            "type": "boolean"
          }
        },
        "required": [
          "supported",
          "supported",
          "",
          "long",
          "year",
          "monthValue",
          "dayOfMonth",
          "dayOfYear",
          "hour",
          "minute",
          "second",
          "nano",
          "after",
          "before",
          "equal"
        ]
      },
      "ZoneOffset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "type": "string"
          },
          "totalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "rules": {
            "$ref": "#/components/schemas/ZoneRules"
          },
          "offset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "supported": {
            "type": "boolean"
          },
          "": {
            "type": "integer",
            "format": "int32"
          },
          "long": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "totalSeconds",
          "supported",
          "",
          "long"
        ]
      },
      "TemporalUnit": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationEstimated": {
            "type": "boolean"
          },
          "dateBased": {
            "type": "boolean"
          },
          "timeBased": {
            "type": "boolean"
          },
          "supportedBy": {
            "type": "boolean"
          }
        },
        "required": [
          "durationEstimated",
          "dateBased",
          "timeBased",
          "supportedBy"
        ]
      },
      "ZoneOffsetTransition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "instant": {
            "type": "string",
            "format": "date-time"
          },
          "dateTimeBefore": {
            "type": "string",
            "format": "date-time"
          },
          "dateTimeAfter": {
            "type": "string",
            "format": "date-time"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "gap": {
            "type": "boolean"
          },
          "overlap": {
            "type": "boolean"
          },
          "validOffset": {
            "type": "boolean"
          },
          "validOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffset"
            }
          }
        },
        "required": [
          "durationSeconds",
          "gap",
          "overlap",
          "validOffset"
        ]
      },
      "ZoneOffsetTransitionRule": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "month": {
            "$ref": "#/components/schemas/Month"
          },
          "dayOfMonthIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "localTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "midnightEndOfDay": {
            "type": "boolean"
          },
          "timeDefinition": {
            "$ref": "#/components/schemas/TimeDefinition"
          },
          "standardOffset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          }
        },
        "required": [
          "dayOfMonthIndicator",
          "midnightEndOfDay"
        ]
      },
      "TimeDefinition": {
        "type": "string",
        "enum": [
          "UTC",
          "WALL",
          "STANDARD"
        ]
      },
      "ZoneRules": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fixedOffset": {
            "type": "boolean"
          },
          "offset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "validOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffset"
            }
          },
          "transition": {
            "$ref": "#/components/schemas/ZoneOffsetTransition"
          },
          "offsetInfo": {
            "type": "object"
          },
          "standardOffset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "daylightSavings": {
            "type": "boolean"
          },
          "validOffset": {
            "type": "boolean"
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransition"
            }
          },
          "transitionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransitionRule"
            }
          }
        },
        "required": [
          "fixedOffset",
          "daylightSavings",
          "validOffset"
        ]
      },
      "Optional": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "": {
            "type": "object"
          },
          "present": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "required": [
          "present",
          "empty"
        ]
      }
    }
  }
}